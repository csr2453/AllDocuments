GIT: Cuenta con 3 estados Staged, Modified y Commited
Git es mas eficiente con archivos planos que con archivos binarios(imagenes), debido a ue al minimo cambio debe volver a guardar 
toda la informacion y eso ahce que se incremente el espacio en disco

GITHUB: Es una plataforma de desarrollo  colavorativo para alojar proyectos. Principalmente es usado par guardar codigo fuente de programas de computadora.
Es facil compartir proyectos.
Permite que otras personas colaboren con un proyecto.

Configurar usuarios antes de usar GIT
$ git config --list => Muestra la configuraciÃ³n por defecto de GIT
$ git config --global user.name "Nombre Dev" => Permite establecer el nombre del usuario
$ git config --global user.email "email@dev.com" => Permite establecer el email del developer

$git init => Crea un area que se llama STAGING
$git init => Inicializa un repositorio dentro de la carpeta donde se lo ejecuta. Es la DB donde se guardan los cambios de los archivos.

$git add => Agrega archivos al STAGING AREA
$git add archivo.txt => agregamos un archivo dentro de la DB creada comn git init
  $git add . => Agrega todos los archivos de la carpeta

$git rm archivo.txt => Quitamos los archivos agregados con el comando add antes de hacerle commit, esto no lo quita del cache.
$ git rm --cached archivo.txt => Quita completamente el archivo de la memoria 

$git commit => Envia los archivos al repositprio su nombre es MASTER o MAIN
$git commit -m 'descripcion del cambio' => Es el que envia los ultimos cambios del archivo a la DB de cambios

$git status => Permite ver el estado de los archivos
$git show archivo.txt => Todos los cambios historicos realizados quien, cuando

$git log archivo.txt => Muestra toda la historia de un archivo
  $git log --stat => Muestra cambios especificos apartir del commit
  
  NOTA: Comparamos las versiones de los commits
$git diff bbacef6b1bd2bb92eafc6bce835d73092bfc88ec e29cfb1feebcf64d46710b361e8d35a4ae26f8ac
 
$git push => Permite enviar todos los cambios a un repositorio remoto


$git pull => Permite traer todos los archivos de un repositorio remoto hacia nuestra maquina local.
 
GIT CHECKOUT => Nos permite volver a una version antrior 
$git checkout => Nos permite obtener los ultimos cambios de un proyecto, obtiene carpetas o solo archivos.
$git checkout c69434ef894424b65c774918c48256ccd488690b nombreArchivo => Nos permite regresar a la version antes de ese commit
$git checkout master nobreArchivo => Obtenemos el archivo que estaba en la rama master

GIT RESET
Este comando ayuda a volver en el tiempo sin la posibilidad de volver al futuro
$git reset => Permite volver a una version anterior
$git reset bbacef6b1bd2bb92eafc6bce835d73092bfc88ec --hard => Todo vuelve al estado anterior(Comando muy peligroso pero muy usado)
$git reset --soft => Vuelve al estado anterior pero lo que esta en el staging se mantiene en el staging
  
GIT RM  
$ git rm => Ayuda a eliminar archvios de GIT sin eliminar su historial del sistema de versiones.
$ git rm --chached => Elimina archivos de nuestro repositorio local y staging area, pero los mantiene en el DDH. 
                      Basicamente le dice a git que deje de trakear el historial de cambios
$ git rm --force => Elimina los archivos de git y del DDH.
  
QUE ES BRANCH?
Rama MASTER v1 --> v2 --> v3 --> .............commit............ --> vf 
Rama EXPERIMENTOS         v1 --> v2 --> 
Rama BUGFIXING                                                       vf --> v(corregido) --> Master Vf.1

Merge: Es la union de la version experimental o desarrollada con la version de la rama principal
Hacer merge generan conflictos







